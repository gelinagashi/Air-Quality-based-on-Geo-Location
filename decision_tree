import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.tree import DecisionTreeRegressor
from sklearn.metrics import r2_score, mean_squared_error

# Load dataset
df = pd.read_csv('AirQualityUCI.csv', sep=';', decimal=',')

# Remove unwanted columns
df.drop(['Date', 'Time', 'CO(GT)', 'PT08.S1(CO)', 'NMHC(GT)', 'C6H6(GT)', 'PT08.S2(NMHC)', 'NOx(GT)', 'PT08.S3(NOx)', 'NO2(GT)', 'PT08.S4(NO2)', 'PT08.S5(O3)', 'T', 'RH', 'AH'], axis=1, inplace=True)

# Remove rows with missing values
df.dropna(inplace=True)

# Split dataset into features (X) and target (y)
X = df.drop('AQI', axis=1)
y = df['AQI']

# Split dataset into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Train Decision Tree regressor
dt = DecisionTreeRegressor(max_depth=5, random_state=42)
dt.fit(X_train, y_train)

# Make predictions
y_train_pred = dt.predict(X_train)
y_test_pred = dt.predict(X_test)

# Evaluate model
print('R2 score (train):', r2_score(y_train, y_train_pred))
print('R2 score (test):', r2_score(y_test, y_test_pred))
print('Mean squared error (train):', mean_squared_error(y_train, y_train_pred))
print('Mean squared error (test):', mean_squared_error(y_test, y_test_pred))

